.. syntax-css:

CSS
=====================

约定
----

#. 使用有意义的标签
#. 根据 ``它们是什么`` 而非 ``它们外观如何`` 为 **class** 命名
#. ID用于只出现一次的地方，Class表现一类事物（推荐）
#. 只在必要的时候使用Div

选择器
------

CSS 选择器主要有：

=============== ====================================
标签选择器	    h1
类选择器	    .title 
ID选择器        #css-logo
属性选择器      [selected]
子元素选择器    ``.content > p`` 选择直属后代p，
                ``.content p`` 选择后代所有的p 
相邻元素选择器  .in + p 选择和.in同级的第一个p
=============== ====================================


.. code-block:: html

    <div class="content">
        <div class="in">
            <p>非直属后代</p>
        </div>
        <p>div.content的直属后代</p>
    </div>


选择器操作：
^^^^^^^^^^^^

* 交集
* 并集
* 补集

伪类：
^^^^^^

* focus 元素取得焦点时
* hover 元素被鼠标指针覆盖时
* active 被激活的样式（鼠标按下那一刻）
* link 未访问的链接
* visited 已访问的链接
* before 在被选择的元素之前设置样式
* after 在被选择的元素之后设置样式

盒模型
------

CSS盒模型是指内容及其周边的辅助显示元素的一些定义，其中从外到内依次是：

* 外边距
* 边框
* 内边距
* 内容区域

.. attention:: 外边距可叠加，比如两个上下相邻元素的 ``margin-bottom`` 和 ``margin-top`` 会重叠抵消。

定位
------

* 相对定位，相对它本应该在的位置定位
* 绝对定位，相对父元素定位
* 浮动定位，介于相对和绝对之间，不受本应该在的文档流的限制，同时浮动元素之间构成新的流
